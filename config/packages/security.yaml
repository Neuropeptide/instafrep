security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            remember_me:
                secret: "%kernel.secret%"
                lifetime: 604800 # one week in seconds
                path: /
                token_provider: 'Symfony\Bridge\Doctrine\Security\RememberMe\DoctrineTokenProvider'
            anonymous: true
            lazy: true
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # Global visitor rights
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY } # la page login est publique
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY } # la page register est publique
        - { path: ^/reset-password, roles: IS_AUTHENTICATED_ANONYMOUSLY } # la page register est publique
        - { path: ^/$, roles: IS_AUTHENTICATED_ANONYMOUSLY } # la home page est publique
        # Global user rights
        - { path: ^/logout, roles: ROLE_USER } # la page login est publique
        - { path: ^/me, roles: ROLE_USER } # la page login est publique
        - { path: ^/verify/email, roles: ROLE_USER } # la page login est publique
        # Global user with verified mail rights
        - { path: ^/, roles: ROLE_VERIFIED } # Toutes les autres pages sont protégées
